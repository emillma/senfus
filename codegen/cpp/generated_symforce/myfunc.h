// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

namespace sym {

/**
 * This function was autogenerated. Do not modify by hand.
 *
 * Args:
 *     inputs: Matrix10_1
 *
 * Outputs:
 *     output: Matrix91
 */
template <typename Scalar>
void Myfunc(const Eigen::Matrix<Scalar, 10, 1>& inputs,
            Eigen::Matrix<Scalar, 9, 1>* const output = nullptr) {
  // Total ops: 28

  // Input arrays

  // Intermediate terms (11)
  const Scalar _tmp0 = -2 * std::pow(inputs(1, 0), Scalar(2));
  const Scalar _tmp1 = 1 - 2 * std::pow(inputs(2, 0), Scalar(2));
  const Scalar _tmp2 = 2 * inputs(3, 0);
  const Scalar _tmp3 = _tmp2 * inputs(2, 0);
  const Scalar _tmp4 = 2 * inputs(1, 0);
  const Scalar _tmp5 = _tmp4 * inputs(0, 0);
  const Scalar _tmp6 = 2 * inputs(0, 0) * inputs(2, 0);
  const Scalar _tmp7 = _tmp4 * inputs(3, 0);
  const Scalar _tmp8 = -2 * std::pow(inputs(0, 0), Scalar(2));
  const Scalar _tmp9 = _tmp4 * inputs(2, 0);
  const Scalar _tmp10 = _tmp2 * inputs(0, 0);

  // Output terms (1)
  if (output != nullptr) {
    Eigen::Matrix<Scalar, 9, 1>& _output = (*output);

    _output(0, 0) = _tmp0 + _tmp1;
    _output(1, 0) = _tmp3 + _tmp5;
    _output(2, 0) = _tmp6 - _tmp7;
    _output(3, 0) = -_tmp3 + _tmp5;
    _output(4, 0) = _tmp1 + _tmp8;
    _output(5, 0) = _tmp10 + _tmp9;
    _output(6, 0) = _tmp6 + _tmp7;
    _output(7, 0) = -_tmp10 + _tmp9;
    _output(8, 0) = _tmp0 + _tmp8 + 1;
  }
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
